---
title: "Winter Flounder *Pseudopleuronectes americanus* Abundance in Rhode Island Coastal Ponds"
subtitle: "RI DMF Fyke Survey 2023-2024"
authors:
  - name: Bryan P. Galligan
  - name: M. Conor McManus
  - name: Richard G. Balouskus
format: pdf
documentclass: report
editor: visual
date: today
csl: documents/american-fisheries-society.csl
bibliography: documents/references.bib
fig-width: 6
fig-height: 4
---

## To do

-   put pond indices on one plot together
-   add language about how to interpret pd and ale plots
-   change temp to ALE and probably remove the scatter plot
-   add summary stats table at beginning
-   add tables for rfm performance compared to the Galligan et al baseline
-   change maps of station effects to compare 1999-2024 with the most recent year

```{r}
#| echo: false
#| output: false

## This code chunk loads and cleans the data for analysis

# Load packages
library(ggpubr)
library(iml)
library(lubridate)
library(osmdata)
library(randomForest)
library(readxl)
library(sf)
library(tidyverse)

# Import data
fyke <-  read_excel("data/model-deployment/FykeSets_2024.xlsx")

# Calculate Julian day
fyke$Haul_Date <- as.POSIXlt(fyke$Haul_Date, format="%d-%m-%y")
fyke$Haul_Date_Jul <- as.numeric(format(fyke$Haul_Date, "%j"))
  
# Convert Julian Day to be 1 at Nov 1 as that is earliest conceivable start date
fyke$Haul_Date_Jul <- ifelse(fyke$Haul_Date_Jul < 200,
  fyke$Haul_Date_Jul + 61, fyke$Haul_Date_Jul - 304)

# Add water temp column
fyke$Water_Temp_C <- NA

# Fill in water temp column
for (i in 1:nrow(fyke)){
  
  # If there is a haul and set temp available, use average
  if (!is.na(fyke$Set_Water_Temp[i]) & !is.na(fyke$Haul_Water_Temp[i])){
    fyke$Water_Temp_C[i] <- mean(c(fyke$Set_Water_Temp[i], fyke$Haul_Water_Temp[i]))
  } else {
  
    # If only one temp is available, use that
    if (!is.na(fyke$Set_Water_Temp[i])){
      fyke$Water_Temp_C[i] <- fyke$Set_Water_Temp[i]
    } else if (!is.na(fyke$Haul_Water_Temp[i])){
      fyke$Water_Temp_C[i] <- fyke$Haul_Water_Temp[i]
    }
  }
}

# Select desired columns
fyke <- fyke %>% select(
  Station_ID,
  Pond_ID,
  Haul_Year_Winter,
  Haul_Date_Jul,
  Soak_Time,
  Set_Occ_Year,
  Water_Temp_C,
  WFL_Caught,
  WFL_Frequency)

# Subset for complete cases only
fyke <- fyke %>% drop_na()

# Make all columns numeric or factor
fyke$Station_ID <- as.factor(fyke$Station_ID)
fyke$Pond_ID <- as.factor(fyke$Pond_ID)
fyke$WFL_Caught <- as.factor(fyke$WFL_Caught)

```

## Introduction

This report uses data from the Rhode Island Division of Marine Fisheries fyke survey and statistical models developed by Galligan et al. [-@galligan_drivers_nodate] to generate a summary of Winter Flounder *Pseudopleuronectes americanus* abundance in Rhode Island coastal ponds. The fyke survey is conducted annually in three ponds: Point Judith Pond, Potter Pond, and Ninigret Pond [@galligan_drivers_nodate]. The survey collects data on Winter Flounder abundance, water temperature, and other environmental variables [@balouskus_coastal_2024; @galligan_drivers_nodate]. The statistical models use random forest machine learning to evaluate catchability and derive a fishery-independent abundance index for Winter Flounder in each pond [@breiman_random_2001; @galligan_drivers_nodate].

The software that generates this report is intended to be run annually. In addition to updating the models presented by Galligan et al. [-@galligan_drivers_nodate], it also provides a summary of Winter Flounder abundance and other relevant data for the most recent survey year.

This report highlights data from survey year:

```{r}
#| echo: false

print(
  paste(
    max(fyke$Haul_Year_Winter) - 1,
    "-",
    max(fyke$Haul_Year_Winter)
  )
)

```

In what follows, we present an overview of Winter Flounder abundance in Rhode Island coastal ponds, focusing on the most recent survey year. We begin with a fishery-independent abundance index derived from data collected in all three coastal ponds, which is followed by specific abundance indices for each pond. We then examine the relationship between Winter Flounder abundance and water temperature. Finally, we explore the effects of fyke station on Winter Flounder catch probability (the probability of occurrence in the fyke survey catch).

## Winter Flounder Abundance

The Southern New England/Mid-Atlantic (SNE/MA) Winter Flounder *Pseudopleuronectes americanus* population experienced a severe decline through the 1990’s, and current estimates place stock biomass at less than 15% of its observed peak in 1982 [@nefsc_southern_2022]. Despite significant reductions in fishing effort, Winter Flounder show no signs of recovery [@nefsc_southern_2022].

### Combined Index

```{r}
#| echo: false
#| label: fig-combined-index
#| fig-cap: Fishery-independent abundance index for Rhode Island Winter Flounder in Rhode Island coastal ponds. The blue line is a partial dependence plot of Winter Flounder abundance on year.
#| fig-pos: htbp!

## This code chunk calculates an abundance index for all ponds

## Run RFM

# Data frame for RFM
df <- fyke %>% select(-WFL_Caught)

# Bootstrap sample for model training
set.seed(12345)
df_boot <- slice_sample(df, prop = 1, replace = TRUE)

# Out of bag sample for testing
df_oob <- setdiff(df, df_boot)

# Data for RFM
x <- select(df_boot, -WFL_Frequency)
y <- df_boot$WFL_Frequency
xtest <- select(df_oob, -WFL_Frequency)
ytest <- df_oob$WFL_Frequency

# Random forest model
rf <- randomForest(x = x, y = y, xtest = xtest, ytest = ytest,
  ntree = 200, mtry = 4,
  importance = TRUE, proximity = TRUE, keep.forest = TRUE)


## PDP Abundance Index

# Make haul winter an integer
fyke$Haul_Year_Winter <- as.integer(fyke$Haul_Year_Winter)

# Calculate partial dependence
pd <- bind_rows(partialPlot(rf, fyke, x.var = "Haul_Year_Winter",
  n.pt = length(unique(fyke$Haul_Year_Winter)), plot = FALSE))

# Create custom rug to show all sampling by date
rug <- fyke %>%
  select(Haul_Year_Winter, Haul_Date_Jul)

# Prepare empty vector for date
rug$Haul_Date <- NA

# Convert Julian date to date object
for (i in 1:nrow(rug)){
  rug$Haul_Date[i] <- as.Date(rug$Haul_Date_Jul[i],
    origin = paste0(rug$Haul_Year_Winter[i] - 1, "-11-01"))
}

# Make Haul Date a date object
rug$Haul_Date <- as.Date(rug$Haul_Date, format = "%Y-%m-%d")

# Convert Haul Date to decimal years
rug$Haul_Date <- as.numeric(
  year(rug$Haul_Date) + (yday(rug$Haul_Date) - 1) / 
    ifelse(leap_year(rug$Haul_Date), 366, 365))

# Plot index
ggplot(pd, aes(x = x, y = y)) +
  geom_line(color = "blue", linewidth = 1) +
  geom_rug(data = rug, aes(x = Haul_Date), inherit.aes = FALSE,
    sides = "b", alpha = 0.1) +
  xlab("Year") +
  ylab("Abundance (no. per haul)") +
  coord_cartesian(ylim = c(0, NA)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

@fig-combined-index provides an overview of the combined abundance patterns in all three coastal ponds when corrected for catchability [@galligan_drivers_nodate].

Our model-based abundance index for all three subpopulations shows a slow but continuing decline since 2007 that is not apparent in the raw survey data (@fig-combined-index). Like our index, the 2022 stock assessment for SNE/MA Winter Flounder showed a significant drop in spawning stock abundance in the early 2000’s, with 10,005 mt in the year 2000 and 4,648 mt in 2005 [@nefsc_southern_2022]. However, the assessment’s increase in spawning stock biomass from 2005–2013 and the subsequent decrease to \~3,500 mt are not reflected in our index [@nefsc_southern_2022].

### Pond Indices

```{r}
#| echo: false
#| label: fig-pj-index
#| fig-cap: Fishery-independent abundance index for Winter Flounder in Point Judith Pond. The blue line is a partial dependence plot of Winter Flounder abundance on year.
#| fig-pos: htbp!

## This code chunk calculates an abundance index for all ponds

## Run RFM

# Data frame for RFM
df <- fyke %>% select(-WFL_Caught)

# Subset for point judith pond only
df <- df %>% filter(Pond_ID == "PJ")

# Remove pond column
df <- df %>% select(-Pond_ID)

# Bootstrap sample for model training
set.seed(12345)
df_boot <- slice_sample(df, prop = 1, replace = TRUE)

# Out of bag sample for testing
df_oob <- setdiff(df, df_boot)

# Data for RFM
x <- select(df_boot, -WFL_Frequency)
y <- df_boot$WFL_Frequency
xtest <- select(df_oob, -WFL_Frequency)
ytest <- df_oob$WFL_Frequency

# Random forest model
rf <- randomForest(x = x, y = y, xtest = xtest, ytest = ytest,
  ntree = 200, mtry = 4,
  importance = TRUE, proximity = TRUE, keep.forest = TRUE)


## PDP Abundance Index

# Make haul winter an integer
df$Haul_Year_Winter <- as.integer(df$Haul_Year_Winter)

# Calculate partial dependence
pd <- bind_rows(partialPlot(rf, df, x.var = "Haul_Year_Winter",
  n.pt = length(unique(df$Haul_Year_Winter)), plot = FALSE))

# Create custom rug to show all sampling by date
rug <- df %>%
  select(Haul_Year_Winter, Haul_Date_Jul)

# Prepare empty vector for date
rug$Haul_Date <- NA

# Convert Julian date to date object
for (i in 1:nrow(rug)){
  rug$Haul_Date[i] <- as.Date(rug$Haul_Date_Jul[i],
    origin = paste0(rug$Haul_Year_Winter[i] - 1, "-11-01"))
}

# Make Haul Date a date object
rug$Haul_Date <- as.Date(rug$Haul_Date, format = "%Y-%m-%d")

# Convert Haul Date to decimal years
rug$Haul_Date <- as.numeric(
  year(rug$Haul_Date) + (yday(rug$Haul_Date) - 1) / 
    ifelse(leap_year(rug$Haul_Date), 366, 365))

# Plot index
ggplot(pd, aes(x = x, y = y)) +
  geom_line(color = "blue", linewidth = 1) +
  geom_rug(data = rug, aes(x = Haul_Date), inherit.aes = FALSE,
    sides = "b", alpha = 0.1) +
  xlab("Year") +
  ylab("Abundance (no. per haul)") +
  coord_cartesian(ylim = c(0, NA)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

@fig-pj-index provides an overview of Winter Flounder abundance through time in Point Judith Pond [@balouskus_coastal_2024].

Point Judith Pond is the easternmost of the surveyed salt ponds. Point Judith Pond has a surface area of approximately 6.58 km2, a mean depth of 1.8 m, and is connected to Block Island Sound by an artificial breachway [@lee_elusive_1980]. The Saugatucket River flows into the north end of Point Judith Pond, providing the greatest freshwater flow of any of the surveyed ponds. Salinity within the pond ranges from approximately 20 PSU in the northern reaches to full oceanic salinity at the breachway. Due to the developed watershed, shallow depths, and relatively low flushing rates, Point Judith Pond can experience eutrophication and increased growth of macroalgae [@lee_eutrophication_1985; @meng_using_2000]. The pond is home to the largest fishing port in Rhode Island, the Block Island ferry terminal, and numerous marinas.

### Potter Pond

```{r}
#| echo: false
#| label: fig-pp-index
#| fig-cap: Fishery-independent abundance index for Winter Flounder in Potter Pond. The blue line is a partial dependence plot of Winter Flounder abundance on year.
#| fig-pos: htbp!

## This code chunk calculates an abundance index for all ponds

## Run RFM

# Data frame for RFM
df <- fyke %>% select(-WFL_Caught)

# Subset for point judith pond only
df <- df %>% filter(Pond_ID == "PP")

# Remove pond column
df <- df %>% select(-Pond_ID)

# Subset for post 2010
df <- df %>% filter(Haul_Year_Winter > 2009)

# Bootstrap sample for model training
set.seed(12345)
df_boot <- slice_sample(df, prop = 1, replace = TRUE)

# Out of bag sample for testing
df_oob <- setdiff(df, df_boot)

# Data for RFM
x <- select(df_boot, -WFL_Frequency)
y <- df_boot$WFL_Frequency
xtest <- select(df_oob, -WFL_Frequency)
ytest <- df_oob$WFL_Frequency

# Random forest model
rf <- randomForest(x = x, y = y, xtest = xtest, ytest = ytest,
  ntree = 200, mtry = 4,
  importance = TRUE, proximity = TRUE, keep.forest = TRUE)


## PDP Abundance Index

# Make haul winter an integer
df$Haul_Year_Winter <- as.integer(df$Haul_Year_Winter)

# Calculate partial dependence
pd <- bind_rows(partialPlot(rf, df, x.var = "Haul_Year_Winter",
  n.pt = length(unique(df$Haul_Year_Winter)), plot = FALSE))

# Create custom rug to show all sampling by date
rug <- df %>%
  select(Haul_Year_Winter, Haul_Date_Jul)

# Prepare empty vector for date
rug$Haul_Date <- NA

# Convert Julian date to date object
for (i in 1:nrow(rug)){
  rug$Haul_Date[i] <- as.Date(rug$Haul_Date_Jul[i],
    origin = paste0(rug$Haul_Year_Winter[i] - 1, "-11-01"))
}

# Make Haul Date a date object
rug$Haul_Date <- as.Date(rug$Haul_Date, format = "%Y-%m-%d")

# Convert Haul Date to decimal years
rug$Haul_Date <- as.numeric(
  year(rug$Haul_Date) + (yday(rug$Haul_Date) - 1) / 
    ifelse(leap_year(rug$Haul_Date), 366, 365))

# Plot index
ggplot(pd, aes(x = x, y = y)) +
  geom_line(color = "blue", linewidth = 1) +
  geom_rug(data = rug, aes(x = Haul_Date), inherit.aes = FALSE,
    sides = "b", alpha = 0.1) +
  xlab("Year") +
  ylab("Abundance (no. per haul)") +
  coord_cartesian(ylim = c(0, 5)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

@fig-pp-index provides an overview of Winter Flounder abundance through time in Potter Pond.

Potter Pond is situated immediately west of Point Judith Pond and joined to Point Judith by a permanent tidal channel. The surface area of Potter Pond is approximately 1.38 km2. The primary source of freshwater into Potter Pond is from Fresh Pond, which empties into Potter’s northern reaches. This northern section of Potter Pond is also characterized by a glacial kettle hole that reaches over 40 feet in depth, a unique feature among the RI coastal ponds. Potter Pond has no direct outlet to the ocean.

### Ninigret Pond

```{r}
#| echo: false
#| label: fig-np-index
#| fig-cap: Fishery-independent abundance index for Winter Flounder in Ninigret Pond. The blue line is a partial dependence plot of Winter Flounder abundance on year.
#| fig-pos: htbp!

## This code chunk calculates an abundance index for all ponds

## Run RFM

# Data frame for RFM
df <- fyke %>% select(-WFL_Caught)

# Subset for point judith pond only
df <- df %>% filter(Pond_ID == "NP")

# Remove pond column
df <- df %>% select(-Pond_ID)

# Bootstrap sample for model training
set.seed(12345)
df_boot <- slice_sample(df, prop = 1, replace = TRUE)

# Out of bag sample for testing
df_oob <- setdiff(df, df_boot)

# Data for RFM
x <- select(df_boot, -WFL_Frequency)
y <- df_boot$WFL_Frequency
xtest <- select(df_oob, -WFL_Frequency)
ytest <- df_oob$WFL_Frequency

# Random forest model
rf <- randomForest(x = x, y = y, xtest = xtest, ytest = ytest,
  ntree = 200, mtry = 4,
  importance = TRUE, proximity = TRUE, keep.forest = TRUE)


## PDP Abundance Index

# Make haul winter an integer
df$Haul_Year_Winter <- as.integer(df$Haul_Year_Winter)

# Calculate partial dependence
pd <- bind_rows(partialPlot(rf, df, x.var = "Haul_Year_Winter",
  n.pt = length(unique(df$Haul_Year_Winter)), plot = FALSE))

# Create custom rug to show all sampling by date
rug <- df %>%
  select(Haul_Year_Winter, Haul_Date_Jul)

# Prepare empty vector for date
rug$Haul_Date <- NA

# Convert Julian date to date object
for (i in 1:nrow(rug)){
  rug$Haul_Date[i] <- as.Date(rug$Haul_Date_Jul[i],
    origin = paste0(rug$Haul_Year_Winter[i] - 1, "-11-01"))
}

# Make Haul Date a date object
rug$Haul_Date <- as.Date(rug$Haul_Date, format = "%Y-%m-%d")

# Convert Haul Date to decimal years
rug$Haul_Date <- as.numeric(
  year(rug$Haul_Date) + (yday(rug$Haul_Date) - 1) / 
    ifelse(leap_year(rug$Haul_Date), 366, 365))

# Plot index
ggplot(pd, aes(x = x, y = y)) +
  geom_line(color = "blue", linewidth = 1) +
  geom_rug(data = rug, aes(x = Haul_Date), inherit.aes = FALSE,
    sides = "b", alpha = 0.1) +
  xlab("Year") +
  ylab("Abundance (no. per haul)") +
  coord_cartesian(ylim = c(0, NA)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

@fig-np-index provides an overview of Winter Flounder abundance through time in Ninigret Pond.

Ninigret Pond is the largest salt pond in Rhode Island with a surface area of approximately 6.74 km2 and has a permanent, maintained breachway to the ocean. The mean depth throughout Ninigret Pond is approximately 0.4 m, and it is connected to Green Hill Pond to the east by a tidal channel [@lee_elusive_1980]. The watershed of Ninigret Pond includes residential housing, marinas, and the USFWS Ninigret Wildlife Refuge.

## Water Temperature

```{r}
#| echo: false
#| label: fig-water-temp
#| fig-cap: Partial dependence plot of Winter Flounder abundance on water temperature. The blue line is the partial dependence plot, and the gray rug shows the distribution of water temperatures in survey data. Scatter plot points represent the observations made in the most recent survey year.
#| fig-pos: htbp!

## This code chunk calculates PDP for water temperature and plots most recent year's data

## Run RFM

# Data frame for RFM
df <- fyke %>% select(-WFL_Caught)

# Bootstrap sample for model training
set.seed(12345)
df_boot <- slice_sample(df, prop = 1, replace = TRUE)

# Out of bag sample for testing
df_oob <- setdiff(df, df_boot)

# Data for RFM
x <- select(df_boot, -WFL_Frequency)
y <- df_boot$WFL_Frequency
xtest <- select(df_oob, -WFL_Frequency)
ytest <- df_oob$WFL_Frequency

# Set Seed
set.seed(12345)

# Random forest model
rf <- randomForest(x = x, y = y, xtest = xtest, ytest = ytest,
  ntree = 200, mtry = 4,
  importance = TRUE, proximity = TRUE, keep.forest = TRUE)


## PDP Water Temp

# Extract rug data
rug <- select(df, Water_Temp_C)

# Extract most recent year's data
df2 <- df %>% filter(Haul_Year_Winter == max(Haul_Year_Winter))

# Calculate partial dependence
pd <- bind_rows(partialPlot(rf, df, x.var = "Water_Temp_C",
  n.pt = 50, plot = FALSE))

# Plot PD with rug
ggplot(df2, aes(x = Water_Temp_C, y = WFL_Frequency)) +
  geom_point(alpha = 0.5) +
  geom_line(data = pd, aes(x = x, y = y),
    color = "blue", linewidth = 1, inherit.aes = FALSE) +
  geom_rug(data = rug, aes(x = Water_Temp_C), inherit.aes = FALSE,
    sides = "b", alpha = 0.1) +
  xlab("Water Temp (°C)") +
  ylab("Abundance (no. per haul)") +
  ggtitle("") +
  coord_cartesian(ylim = c(0, NA)) +
  scale_y_continuous(expand = c(0, 0)) +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

@fig-water-temp shows the partial dependence of Winter Flounder abundance on water temperature.

Water temperature was the only environmental variable that predicted abundance (@fig-water-temp). Below an \~8 ℃ threshold, warmer temperatures were associated with increased abundance (Figure 3). This trend is consistent with observations of burrowing and/or inactivity at cooler temperatures, which would make Winter Flounder less available to fixed gears [@grothues_winter_2012; @ziegler_flatfish_2019]. Above \~8 ℃, the positive effect of temperature on abundance declined.

### Historical Temperature Observations

```{r}
#| echo: false
#| label: fig-water-temp-pj
#| fig-cap: Boxplot of historical water temperature observations in Point Judith Pond. The dashed red line represents the mean water temperature for all years prior to 2020.
#| fig-pos: "!htbp"

## This code chunk plots descriptive stats for water temperature

# Point Judith
df <- fyke %>% filter(Pond_ID == "PJ")

ggplot(df, aes(group = Haul_Year_Winter, x = Haul_Year_Winter, y = Water_Temp_C)) +
  geom_boxplot() +
  geom_hline(yintercept = mean(df$Water_Temp_C[df$Haul_Year_Winter < 2020]),
    linetype = "dashed", color = "red") +
  xlab("Year") +
  ylab("Water Temp (°C)") +
  ggtitle("", "Point Judith Pond") +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

```{r}
#| echo: false
#| label: fig-water-temp-pp
#| fig-cap: Boxplot of historical water temperature observations in Potter Pond. The dashed red line represents the mean water temperature for all years prior to 2020.
#| fig-pos: h

## This code chunk plots descriptive stats for water temperature

# Potter Pond
df <- fyke %>% filter(Pond_ID == "PP")

ggplot(df, aes(group = Haul_Year_Winter, x = Haul_Year_Winter, y = Water_Temp_C)) +
  geom_boxplot() +
  geom_hline(yintercept = mean(df$Water_Temp_C[df$Haul_Year_Winter < 2020]),
    linetype = "dashed", color = "red") +
  xlab("Year") +
  ylab("Water Temp (°C)") +
  ggtitle("", "Potter Pond") +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))

```

```{r}
#| echo: false
#| label: fig-water-temp-np
#| fig-cap: Boxplot of historical water temperature observations in Ninigret Pond. The dashed red line represents the mean water temperature for all years prior to 2020.
#| fig-pos: h

## This code chunk plots descriptive stats for water temperature

# Ninigret Pond
df <- fyke %>% filter(Pond_ID == "NP")

ggplot(df, aes(group = Haul_Year_Winter, x = Haul_Year_Winter, y = Water_Temp_C)) +
  geom_boxplot() +
  geom_hline(yintercept = mean(df$Water_Temp_C[df$Haul_Year_Winter < 2020]),
    linetype = "dashed", color = "red") +
  xlab("Year") +
  ylab("Water Temp (°C)") +
  ggtitle("", "Ninigret Pond") +
  theme_pubr() +
  theme(plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))


```

@fig-water-temp-pj shows the distribution of water temperatures in Point Judith Pond. The mean water temperature observed in Point Judith Pond from 1998-2023 was 5.7 ℃.

@fig-water-temp-pp shows the distribution of water temperatures in Potter Pond. As of 2024, the mean water temperature observed in Potter Pond was 5.7 ℃, with most of those observations taking place since 2011.

@fig-water-temp-np shows the distribution of water temperatures in Ninigret Pond. The mean water temperature observed in Ninigret Pond from 2012-2024 was 5.6 ℃.

Winter Flounder display diverse temperature preferences throughout their range, and respond to shifts in temperature by managing depth, activity level, and burrowing behaviors [@collette_righteye_2002]. Climate warming is believed to be a significant driver of Winter Flounder population dynamics, with increased temperatures exerting direct effects on early life stages and indirect effects through changes in niche availability [@bell_climate-induced_2022; @langan_taking_2023]. We also note the possible amplification of long-term warming in the study location [@oczkowski_preliminary_2015].

## Station

```{r}
#| echo: false

## This code chunk calculates accumulated local effects (ALE) of station on catch probability. No plots are created.

## Run RFM

# Data frame for RFM
df1 <- fyke %>%
  select(-WFL_Frequency) %>%
  filter(Haul_Year_Winter < 2020)
df2 <- fyke %>%
  select(-WFL_Frequency) %>%
  filter(Haul_Year_Winter >= max(Haul_Year_Winter) - 4)

# Bootstrap sample for model training
set.seed(12345)
df1_boot <- slice_sample(df1, prop = 1, replace = TRUE)
set.seed(12345)
df2_boot <- slice_sample(df2, prop = 1, replace = TRUE)

# Out of bag sample for testing
df1_oob <- setdiff(df1, df1_boot)
df2_oob <- setdiff(df2, df2_boot)

# Data for RFM
x1 <- select(df1_boot, -WFL_Caught)
x2 <- select(df2_boot, -WFL_Caught)
y1 <- df1_boot$WFL_Caught
y2 <- df2_boot$WFL_Caught
xtest1 <- select(df1_oob, -WFL_Caught)
xtest2 <- select(df2_oob, -WFL_Caught)
ytest1 <- df1_oob$WFL_Caught
ytest2 <- df2_oob$WFL_Caught

# Set Seed
set.seed(12345)

# Baseline RFM
rf1 <- randomForest(x = x1, y = y1, xtest = xtest1, ytest = ytest1,
  ntree = 200, mtry = 5,
  importance = TRUE, proximity = TRUE, keep.forest = TRUE)

# Set Seed
set.seed(12345)

# Last Five Years RFM
rf2 <- randomForest(x = x2, y = y2, xtest = xtest2, ytest = ytest2,
  ntree = 200, mtry = 5,
  importance = TRUE, proximity = TRUE, keep.forest = TRUE)


## Calculate ALE

# Predictor object to hold model and data
predictor1 <- Predictor$new(rf1, data = x1, y = y1)
predictor2 <- Predictor$new(rf2, data = x2, y = y2)

# Calculate all effects using ALE
effs1 <- FeatureEffects$new(predictor1, grid.size = 50)
effs2 <- FeatureEffects$new(predictor2, grid.size = 50)

# Extract rug data
rug1 <- df1 %>% select(Station_ID)
rug2 <- df2 %>% select(Station_ID)

# Summarize rug as total number of samples per station
rug1 <- rug1 %>% group_by(Station_ID) %>% summarise(n = n())
rug2 <- rug2 %>% group_by(Station_ID) %>% summarise(n = n())

# Extract rf effects for station
ale1 <- effs1$results$Station_ID
ale2 <- effs2$results$Station_ID

# Limit to class = TRUE
ale1 <- filter(ale1, .class == "TRUE")
ale2 <- filter(ale2, .class == "TRUE")

# Select columns
ale1 <- select(ale1, .value, .borders)
ale2 <- select(ale2, .value, .borders)

# Rename columns
colnames(ale1) <- c("Probability", "Station_ID")
colnames(ale2) <- c("Probability", "Station_ID")

# Add sample size to station_effects
ale1 <- left_join(ale1, rug1, by = "Station_ID")
ale2 <- left_join(ale2, rug2, by = "Station_ID")

# Remove rows with no sample size
ale1 <- filter(ale1, !is.na(n))
ale2 <- filter(ale2, !is.na(n))


## Map Station Effects

# Import lat/lon
stations <- read_excel("data/raw-data/FykeStations.xlsx")

# Select columns
stations <- select(stations, Station_ID, Latitude, Longitude)

# Merge with station data
ale1 <- left_join(ale1, stations, by = "Station_ID")
ale2 <- left_join(ale2, stations, by = "Station_ID")

# Group station effects by positive and negative
ale1$posneg <- ifelse(ale1$Probability > 0, "Positive", "Negative")
ale2$posneg <- ifelse(ale2$Probability > 0, "Positive", "Negative")

# Add a pond column
ale1$Pond <- substr(ale1$Station_ID, 1, 2)
ale2$Pond <- substr(ale2$Station_ID, 1, 2)

# Remove rows with NA
ale1 <- filter(ale1, !is.na(Latitude))
ale2 <- filter(ale2, !is.na(Latitude))

# Split into two separate data frames, one with n<30 and one with n>=30
ale1_small <- filter(ale1, n < 30)
ale1_big <- filter(ale1, n >= 30)
ale2_small <- filter(ale2, n < 30)
ale2_big <- filter(ale2, n >= 30)

```

```{r}
#| echo: false
#| label: fig-pj-stations
#| fig-cap: Accumulated local effects (ALE) of station on catch probability in Point Judith Pond. The left panel shows the ALE for all years prior to 2020, and the right panel shows the ALE for the last five years.
#| fig-pos: "!htbp"

## This code chunk plots the ALE of station for Point Judith Pond

# Define the bounding box for Point Judith Pond
pj_bbox <- c(-71.518, 41.375, -71.49, 41.431)

# Get OSM data for waterbodies
pj_map <- opq(bbox = pj_bbox) %>%
  add_osm_feature(key = 'natural', value = 'water') %>%
  osmdata_sf()



# Plot the historical data
p1 <- ggplot() +
  geom_sf(data = pj_map$osm_multipolygons, fill = "gray80", color = "gray50") +
  coord_sf(xlim = c(pj_bbox[1], pj_bbox[3]), ylim = c(pj_bbox[2], pj_bbox[4])) +
  geom_point(data = ale1_small,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 0.5) +
  geom_point(data = ale1_big,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 1) +
  ggtitle("", "Pre-2020") +
  xlab("") +
  ylab("") +
  scale_x_continuous(breaks = c(-71.51, -71.49)) +
  scale_y_continuous(breaks = c(41.39, 41.41, 41.43)) +
  scale_size_continuous(breaks = c(0.03, 0.06, 0.09, 0.12)) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = "white"),  # White panel background
    plot.background = element_rect(fill = "white", color = "white")   # White overall plot background
  ) +
  guides(
    fill = guide_none(),
    color = guide_legend(title = "Effect"),
    size = guide_legend(title = "Probability")
  )

# Plot the new data
p2 <- ggplot() +
  geom_sf(data = pj_map$osm_multipolygons, fill = "gray80", color = "gray50") +
  coord_sf(xlim = c(pj_bbox[1], pj_bbox[3]), ylim = c(pj_bbox[2], pj_bbox[4])) +
  geom_point(data = ale2_small,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 0.5) +
  geom_point(data = ale2_big,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 1) +
  ggtitle("", 
    paste(max(df2$Haul_Year_Winter) - 4, "to", max(df2$Haul_Year_Winter))) +
  xlab("") +
  ylab("") +
  scale_x_continuous(breaks = c(-71.51, -71.49)) +
  scale_y_continuous(breaks = c(41.39, 41.41, 41.43)) +
  scale_size_continuous(breaks = c(0.03, 0.06, 0.09, 0.12)) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = "white"),  # White panel background
    plot.background = element_rect(fill = "white", color = "white")   # White overall plot background
  ) +
  guides(
    fill = guide_none(),
    color = guide_legend(title = "Effect"),
    size = guide_legend(title = "Probability")
  )

# Plot Point Judith
ggarrange(p1, p2, ncol = 2, nrow = 1, common.legend = TRUE, legend = "right")

```

```{r}
#| echo: false
#| label: fig-pp-stations
#| fig-cap: Accumulated local effects (ALE) of station on catch probability in Potter Pond. The left panel shows the ALE for all years prior to 2020, and the right panel shows the ALE for the last five years.
#| fig-pos: "!htbp"

## This code chunk plots the ALE of station for Potter Pond

# Define the bounding box for Potter Pond
pp_bbox <- c(-71.545, 41.374, -71.5265, 41.40)

# Get OSM data for waterbodies
pp_map <- opq(bbox = pp_bbox) %>%
  add_osm_feature(key = 'natural', value = 'water') %>%
  osmdata_sf()

# Plot the historical baseline
p1 <- ggplot() +
  geom_sf(data = pp_map$osm_multipolygons, fill = "gray80", color = "gray50") +
  coord_sf(xlim = c(pp_bbox[1], pp_bbox[3]), ylim = c(pp_bbox[2], pp_bbox[4])) +
  geom_point(data = ale1_small,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 0.5) +
  geom_point(data = ale1_big,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 1) +
  ggtitle("", "Pre-2020") +
  xlab("") +
  ylab("") +
  scale_x_continuous(breaks = c(-71.54, -71.53)) +
  scale_y_continuous(breaks = c(41.37, 41.38, 41.39, 41.4)) +
  scale_size_continuous(breaks = c(0.03, 0.06, 0.09, 0.12)) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = "white"),  # White panel background
    plot.background = element_rect(fill = "white", color = "white")   # White overall plot background
  ) +
  guides(
    fill = guide_none(),
    color = guide_legend(title = "Effect"),
    size = guide_legend(title = "Probability")
  )


# Plot the new data
p2 <- ggplot() +
  geom_sf(data = pp_map$osm_multipolygons, fill = "gray80", color = "gray50") +
  coord_sf(xlim = c(pp_bbox[1], pp_bbox[3]), ylim = c(pp_bbox[2], pp_bbox[4])) +
  geom_point(data = ale2_small,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 0.5) +
  geom_point(data = ale2_big,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 1) +
  ggtitle("",
    paste(max(df2$Haul_Year_Winter) - 4, "to", max(df2$Haul_Year_Winter))) +
  xlab("") +
  ylab("") +
  scale_x_continuous(breaks = c(-71.54, -71.53)) +
  scale_y_continuous(breaks = c(41.37, 41.38, 41.39, 41.4)) +
  scale_size_continuous(breaks = c(0.03, 0.06, 0.09, 0.12)) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = "white"),  # White panel background
    plot.background = element_rect(fill = "white", color = "white")   # White overall plot background
  ) +
  guides(
    fill = guide_none(),
    color = guide_legend(title = "Effect"),
    size = guide_legend(title = "Probability")
  )

# Plot Potter Pond
ggarrange(p1, p2, ncol = 2, nrow = 1, common.legend = TRUE, legend = "right")


```

```{r}
#| echo: false
#| label: fig-np-stations
#| fig-cap: Accumulated local effects (ALE) of station on catch probability in Ninigret Pond. The left panel shows the ALE for all years prior to 2020, and the right panel shows the ALE for the last five years.
#| fig-pos: "!htbp"

## This code chunk plots the ALE of station for Ninigret Pond

# Define the bounding box for Ninigret Pond
np_bbox <- c(-71.7, 41.34, -71.626912, 41.385)

# Get OSM data for waterbodies
np_map <- opq(bbox = np_bbox) %>%
  add_osm_feature(key = 'natural', value = 'water') %>%
  osmdata_sf()

# Plot the historical map
p1 <- ggplot() +
  geom_sf(data = np_map$osm_multipolygons, fill = "gray80", color = "gray50") +
  coord_sf(xlim = c(np_bbox[1], np_bbox[3]), ylim = c(np_bbox[2], np_bbox[4])) +
  geom_point(data = ale1_small, 
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 0.5) +
  geom_point(data = ale1_big,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 1) +
  ggtitle("", "Pre-2020") +
  xlab("") +
  ylab("") +
  scale_x_continuous(breaks = c(-71.7, -71.67, -71.64)) +
  scale_y_continuous(breaks = c(41.34, 41.36, 41.38)) +
  scale_size_continuous(breaks = c(0.03, 0.06, 0.09, 0.12)) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = "white"),  # White panel background
    plot.background = element_rect(fill = "white", color = "white")   # White overall plot background
  ) +
  guides(
    fill = guide_none(),
    color = guide_legend(title = "Effect"),
    size = guide_legend(title = "Probability")
  )

# Plot the new map
p2 <- ggplot() +
  geom_sf(data = np_map$osm_multipolygons, fill = "gray80", color = "gray50") +
  coord_sf(xlim = c(np_bbox[1], np_bbox[3]), ylim = c(np_bbox[2], np_bbox[4])) +
  geom_point(data = ale2_small, 
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 0.5) +
  geom_point(data = ale2_big,
    aes(x = Longitude, y = Latitude, color = posneg, size = abs(0.5 - Probability)),
    alpha = 1) +
  ggtitle("",
    paste(max(df2$Haul_Year_Winter) - 4, "to", max(df2$Haul_Year_Winter))) +
  xlab("") +
  ylab("") +
  scale_x_continuous(breaks = c(-71.7, -71.67, -71.64)) +
  scale_y_continuous(breaks = c(41.34, 41.36, 41.38)) +
  scale_size_continuous(breaks = c(0.03, 0.06, 0.09, 0.12)) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = "white"),  # White panel background
    plot.background = element_rect(fill = "white", color = "white")   # White overall plot background
  ) +
  guides(
    fill = guide_none(),
    color = guide_legend(title = "Effect"),
    size = guide_legend(title = "Probability")
  )

# Plot Ninigret
ggarrange(p1, p2, ncol = 2, nrow = 1, common.legend = TRUE, legend = "right")

```

The following figures show the accumulated local effects (ALE) of station on catch probability for (1) the period from 1998-2019 and (2) the most recent five survey years. Effects are estimated for Point Judith Pond (@fig-pj-stations), Potter Pond (@fig-pp-stations), and Ninigret Pond (@fig-np-stations).

Fixed sampling stations within Point Judith Pond and Potter Pond have been surveyed at varying levels of effort since 1999 [@galligan_drivers_nodate]. Ninigret Pond was added to the survey in 2012 [@galligan_drivers_nodate]. Within each pond, between one and three fyke nets were set concurrently at any given time and then rotated haphazardly among fixed stations over the course of the winter.

Station and pond are both influential drivers of Winter Flounder catch rates in the fyke survey [@galligan_drivers_nodate]. Notably, Potter Pond had no sites with a positive effect on occurrence or abundance, and Ninigret Pond displayed the strongest positive effects [@galligan_drivers_nodate].

### Point Judith Pond

The historically productive Point Judith Pond has been surveyed since 1999 [@fig-pj-stations]. The fyke survey has been conducted at 8 fixed stations within the pond, with varying levels of effort at each station. Notably, temporal changes have been observed in Point Judith Pond, with a narrower spawning window in more recent years [@balouskus_coastal_2024].

### Potter Pond

Potter Pond has been surveyed consistently since 2011, with fyke nets set at 7 fixed stations within the pond [@fig-pp-stations]. Potter Pond has been characterized by a lack of positive effects on Winter Flounder occurrence or abundance, with the exception of a single station in the most recent survey years [@galligan_drivers_nodate].

### Ninigret Pond

Ninigret Pond was added to the fyke survey in 2012 with 7 fixed stations [@fig-np-stations]. The pond has been characterized by more positive effects on Winter Flounder occurrence and abundance and a higher abundance index than Point Judith or Potter ponds in recent years [@galligan_drivers_nodate].

## References

::: {#refs}
:::
